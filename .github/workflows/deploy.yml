# ... inside your deploy job ...
jobs:
  deploy-docker:
    # ...
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            # Dynamically determine the app directory from the repo name
            # GITHUB_REPOSITORY is 'YourUsername/my-repo-name'. We extract the last part.
            REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)
            APP_DIR="${{ secrets.APPS_BASE_DIR }}/$REPO_NAME"

            # Create the directory and navigate into it
            mkdir -p $APP_DIR
            cd $APP_DIR

            # Create project-specific .env file
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env
            
            # Create project-specific docker-compose.yml on the fly
            # This ensures container names don't clash!
            cat << EOF > docker-compose.yml
            version: '3.8'
            services:
              $REPO_NAME:
                image: yourdockerhubuser/$REPO_NAME:latest
                container_name: $REPO_NAME
                restart: always
                ports:
                  - "${{ secrets.SERVER_PORT }}:3000" # Maps unique external port to standard internal port 3000
                env_file:
                  - .env
            EOF

            # Pull and deploy
            docker-compose pull
            docker-compose up -d
